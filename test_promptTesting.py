# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPromptTesting():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_chatGPT(self):
    self.driver.get("https://chatgpt.com/")
    self.driver.set_window_size(1176, 875)
    self.driver.find_element(By.ID, "prompt-textarea").click()
    self.driver.find_element(By.ID, "prompt-textarea").send_keys(self.vars["prompt1"])
    self.driver.find_element(By.CSS_SELECTOR, ".icon-2xl").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "rect")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".markdown > p").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "span:nth-child(2) .icon-md-heavy")))
    self.vars["chatgptResponse"] = self.driver.find_element(By.CSS_SELECTOR, ".markdown").text
    print("{}".format(self.vars["chatgptResponse"]))
  
  def test_gemini(self):
    self.vars["prompt1"] = "How to keep the house cool in extreme summer heat?"
    self.driver.get("https://gemini.google.com/app")
    self.driver.set_window_size(1176, 875)
    self.driver.execute_script("window.scrollTo(0,0)")
    self.driver.find_element(By.CSS_SELECTOR, ".ql-editor > p").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ql-editor")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = 'self.vars["prompt1"]'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".send-button > .mat-icon").click()
    WebDriverWait(self.driver, 50).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".tts-button > .mat-mdc-button-touch-target")))
    self.vars["geminiResponse"] = self.driver.find_element(By.CSS_SELECTOR, ".markdown").text
    print("{}".format(self.vars["geminiResponse"]))
  
